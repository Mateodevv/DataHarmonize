# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'view/untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.5
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(841, 573)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.up_json = QtWidgets.QPushButton(self.centralwidget)
        self.up_json.setGeometry(QtCore.QRect(10, 110, 75, 23))
        self.up_json.setObjectName("up_json")
        self.up_csv = QtWidgets.QPushButton(self.centralwidget)
        self.up_csv.setGeometry(QtCore.QRect(150, 110, 75, 23))
        self.up_csv.setObjectName("up_csv")
        self.up_xlsx = QtWidgets.QPushButton(self.centralwidget)
        self.up_xlsx.setGeometry(QtCore.QRect(300, 110, 75, 23))
        self.up_xlsx.setObjectName("up_xlsx")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(10, 220, 231, 301))
        self.textBrowser.setObjectName("textBrowser")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_2.setGeometry(QtCore.QRect(600, 220, 231, 301))
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.col_data = QtWidgets.QLineEdit(self.centralwidget)
        self.col_data.setGeometry(QtCore.QRect(10, 150, 231, 20))
        self.col_data.setObjectName("col_data")
        self.import_data = QtWidgets.QPushButton(self.centralwidget)
        self.import_data.setGeometry(QtCore.QRect(10, 170, 231, 23))
        self.import_data.setObjectName("import_data")
        self.exp_json = QtWidgets.QPushButton(self.centralwidget)
        self.exp_json.setGeometry(QtCore.QRect(560, 170, 75, 23))
        self.exp_json.setObjectName("exp_json")
        self.exp_df = QtWidgets.QPushButton(self.centralwidget)
        self.exp_df.setGeometry(QtCore.QRect(730, 170, 101, 23))
        self.exp_df.setObjectName("exp_df")
        self.exp_csv = QtWidgets.QPushButton(self.centralwidget)
        self.exp_csv.setGeometry(QtCore.QRect(640, 170, 81, 23))
        self.exp_csv.setObjectName("exp_csv")
        self.sourcedata = QtWidgets.QLabel(self.centralwidget)
        self.sourcedata.setGeometry(QtCore.QRect(80, 200, 71, 20))
        self.sourcedata.setObjectName("sourcedata")
        self.targetdata = QtWidgets.QLabel(self.centralwidget)
        self.targetdata.setGeometry(QtCore.QRect(690, 200, 61, 16))
        self.targetdata.setObjectName("targetdata")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(20, 20, 411, 71))
        self.label_3.setObjectName("label_3")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(20, 90, 421, 16))
        self.label_6.setText("")
        self.label_6.setObjectName("label_6")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(440, 10, 381, 91))
        self.label_8.setObjectName("label_8")
        self.successIcon = QtWidgets.QLabel(self.centralwidget)
        self.successIcon.setGeometry(QtCore.QRect(440, 130, 111, 71))
        self.successIcon.setText("")
        self.successIcon.setScaledContents(True)
        self.successIcon.setObjectName("successIcon")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(570, 90, 261, 71))
        self.label.setObjectName("label")
        self.successLabel = QtWidgets.QLabel(self.centralwidget)
        self.successLabel.setGeometry(QtCore.QRect(300, 150, 101, 16))
        self.successLabel.setText("")
        self.successLabel.setObjectName("successLabel")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(250, 180, 181, 41))
        self.groupBox.setTitle("")
        self.groupBox.setFlat(True)
        self.groupBox.setObjectName("groupBox")
        self.htmlbutton = QtWidgets.QRadioButton(self.groupBox)
        self.htmlbutton.setGeometry(QtCore.QRect(0, 10, 82, 17))
        self.htmlbutton.setChecked(True)
        self.htmlbutton.setObjectName("htmlbutton")
        self.rawstring = QtWidgets.QRadioButton(self.groupBox)
        self.rawstring.setGeometry(QtCore.QRect(90, 10, 82, 17))
        self.rawstring.setObjectName("rawstring")
        self.dfPrint = QtWidgets.QTextBrowser(self.centralwidget)
        self.dfPrint.setGeometry(QtCore.QRect(250, 220, 341, 301))
        self.dfPrint.setObjectName("dfPrint")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 841, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.up_json.setText(_translate("MainWindow", "Upload JSON"))
        self.up_csv.setText(_translate("MainWindow", "Upload CSV"))
        self.up_xlsx.setText(_translate("MainWindow", "Upload XLSX"))
        self.import_data.setText(_translate("MainWindow", "execute command"))
        self.exp_json.setText(_translate("MainWindow", "export JSON"))
        self.exp_df.setText(_translate("MainWindow", "export DataFrame"))
        self.exp_csv.setText(_translate("MainWindow", "export CSV"))
        self.sourcedata.setText(_translate("MainWindow", "Source Data"))
        self.targetdata.setText(_translate("MainWindow", "Target Data"))
        self.label_3.setText(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Data manipulation Syntax:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">SourceDataColIndex(+)</span> = Adds the column to the target data</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">SourceDataColIndex(x)TargetDataColIndex</span> = Appends source values to target data</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">SourceDataColIndex(-r)TargetDataColIndex </span>= Drops matching rows in target data</p></body></html>"))
        self.label_8.setText(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Sample Snippets:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">1(+)</span> = Adds the column sourceData[1] to the target data</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">1(x)0</span> = Adds the column sourceData[1] to the targetData[0] column</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">1(-r)0</span> = Drops row where the value(sourceData[1]) == value(targetData[0)]</p></body></html>"))
        self.label.setText(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Hint:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">single line <span style=\" font-weight:600; text-decoration: underline;\">Multi-commands</span> are avaible.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">example snippet:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">1(+), 3(x)0</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-style:italic;\"><br /></p></body></html>"))
        self.htmlbutton.setText(_translate("MainWindow", "Formatted"))
        self.rawstring.setText(_translate("MainWindow", "RAW String"))
